*ISP:Interface Segregation principle states that no class should be forced to exhibit
a behaviour.
This happens because of bulky interface/abstract classes.

*ISP is kind of SRP for interfaces.

*You try to segregate behaviours into different behaviours, so every interface
should be responsible for one kind of behaviour.

**So basically as part of ISP : interface segregation principle we create multiple
interfaces for every service and whichever concrete class needs to implement that
method/behaviour can implement any interface accordingly.

Example:
we can create multiple interfaces like fixed deposit, deposit, withdraw, loan, PayEmi and
FDAccount class can implement fixed deposit interface, since it does not supports withdraw and loan,
and payEMI behaviour since you cannot pay EMIs from FDAccount, so we have not given that
payEMI behaviour to the FDAccount class since it does not need that behaviour.
so if a class doesn't need a behaviour dont just give i.e. implement the corresponding behaviour facilitating interface.
So that's what ISP say:
"That any concrete class if it's not possessing any concrete behaviour, you should not force it to implement that behaviour."
NO ENFORCING ANYTHING.
